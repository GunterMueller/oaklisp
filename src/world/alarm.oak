;;; This file is part of Oaklisp.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; The GNU GPL is available at http://www.gnu.org/licenses/gpl.html
;;; or from the Free Software Foundation, 59 Temple Place - Suite 330,
;;; Boston, MA 02111-1307, USA


;;
;;
;; Handles alarm traps which are arbitrarily generated by the bytecode
;; emulator.
;;

#|
(define (alarm n)
  (%disable-alarms)
  (format #t "*Bing*")
  (set! ((%register 'nargs)) n)
  (%reset-alarm-counter)
  (%enable-alarms)
  (%return))
|#

(define alarm (add-method ((make operation) n)
  (pause)
  (set! ((%register 'nargs)) n)
  (%return)))

;;; avoid forward reference in tag-trap.oak
(set! (nth %argless-tag-trap-table 127) alarm)

;;
;; Define atomic functions (op-codes) for turning alarms on and off.
;;
(define-constant %enable-alarms
  (add-method ((make-open-coded-operation '((enable-alarms)) 0 1)
	       (object))
	      (%enable-alarms)))

(define-constant %disable-alarms
  (add-method ((make-open-coded-operation '((disable-alarms)) 0 1)
	       (object))
	      (%disable-alarms)))

(define-constant %reset-alarm-counter
  (add-method ((make-open-coded-operation '((reset-alarm-counter)) 0 1)
	       (object))
	      (%reset-alarm-counter)))
