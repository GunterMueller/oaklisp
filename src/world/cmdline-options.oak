;;; Copyright (C) 1999 Barak A. Pearlmutter.

(define commandline-options
  `(("eval" 1 ,(lambda (x)
		 (eval (read (make string-input-stream x))
		       (fluid current-locale))))
    ("load" 1 ,(lambda (x)
		 (load x (fluid current-locale))))
    ("compile" 1 ,(lambda (x)
		    (format #t "~&Compiling ~S..." x)
		    (flush standard-output)
		    (bind (((fluid compiler-noisiness) 0))
		      (compile-file (fluid current-locale)
				    x))
		    (format #t "...done.~%")))
    ("locale" 1 ,(lambda (x)
		   (set! (fluid current-locale)
			 (eval (read (make string-input-stream x))
			       (fluid current-locale)))))
    ("pthreads" 1 ,(lambda (x)
		     (set! heavyweight-thread-count
		       (read-token (make string-input-stream x)))
		     (when (not (integer? heavyweight-thread-count))
		       (exit 1 "-pthread option takes integer argument.~%"))))
    ("exit" 0 ,(lambda () (exit 0 "")))))

(define (cmdline-eat)
  (set! argline
	(getopt commandline-options
		argline)))

(add-warm-boot-action cmdline-eat)
