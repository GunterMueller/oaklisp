;;; Copyright (C) 1987, Kevin J. Lang & Barak A. Pearlmutter.

(define (tak x y z)
  (cond ((not (< y x)) z)
	(else (tak (tak (- x 1) y z)
		   (tak (- y 1) z x)
		   (tak (- z 1) x y)))))

#|
;;; hacked for siod
(define (tak x y z)
  (if (< y x)
      (tak (tak (- x 1) y z)
	   (tak (- y 1) z x)
	   (tak (- z 1) x y))
      z))
|#

;;; This tests the effect of block compilation:
(define (tak2 x y z)
  (iterate tak ((x x)(y y)(z z))
    (cond ((not (< y x)) z)
	  (else (tak (tak2 (- x 1) y z)
		     (tak2 (- y 1) z x)
		     (tak2 (- z 1) x y))))))

(define (macnine x)
  (if (> x 100)
      (- x 10)
      (macnine (macnine (+ x 11)))))


