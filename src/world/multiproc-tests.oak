
;; regression tests start here...

(process-id (current-process))
(%heavyweight-thread start-busy-work)

(define x (make mutex))
(acquire-mutex x)
(release-mutex x)

(define y (delay (+ 1 2)))
(define z (future (+ 1 2)))

(define (test-fn)
  (while t (format t "~s~%" (process-id (current-process)))))
(process-run-fn test-fn nil)
(process-run-fn test-fn nil)
(process-run-fn test-fn nil)
(test-fn)

(set! (fluid thing) 'adf)
(fluid thing)	;Should return symbol ADF

(bind (((fluid hello) "hello")) (fluid hello))	;Returns "hello"
(fluid hello)	;Should error

(bind (((fluid hello) "hello")) (set! (fluid world) "world"))
(fluid world)	;Returns "world"
(fluid hello)  	;Should error
