;;; This file is part of Oaklisp.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; The GNU GPL is available at http://www.gnu.org/licenses/gpl.html
;;; or from the Free Software Foundation, 59 Temple Place - Suite 330,
;;; Boston, MA 02111-1307, USA


;;; Copyright (C) 1989 Kevin J. Lang & Barak A. Pearlmutter

;;; We're up enough now to attempt a read-eval-print loop upon reboot.

(define (%get-an-ivar t o v)
  (contents (car (%locate-ivars t o (list v)))))

(let* ((reboot-lambda

	(lambda ()
	  (set! ((%register 'nil)) (the-runtime nil))
	  (set! ((%register 't)) (the-runtime t))
	  (set! ((%register 'cons-type)) (the-runtime cons-pair))
	  (set! ((%register 'object-type)) (the-runtime object))
	  (set! ((%register 'fixnum-type)) (the-runtime fixnum))
	  (set! ((%register 'loc-type)) (the-runtime locative))
	  (set! ((%register 'env-type)) (the-runtime %closed-environment))
	  (set! ((%register 'segment-type)) (the-runtime stack-segment))
	  (set! ((%register 'method-type)) (the-runtime %method))
	  (set! ((%register 'operation-type)) (the-runtime operation))

	  (warm-boot)
	  ;; (format t "warm boot actions ~S~%" warm-boot-actions)
	  (top-level)))

       (reboot-method (%get-an-ivar operation reboot-lambda 'lambda?)))
  (set! ((%register 'boot-code)) reboot-method))
