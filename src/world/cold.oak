;;; This file is part of Oaklisp.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; The GNU GPL is available at http://www.gnu.org/licenses/gpl.html
;;; or from the Free Software Foundation, 59 Temple Place - Suite 330,
;;; Boston, MA 02111-1307, USA


;;; Copyright (C) 1986 Barak A. Pearlmutter and Kevin J. Lang

;;; Define both input and output streams that might work during the cold
;;; load process, so we can have a gander at error messages and maybe poke
;;; about.

(let ((cold-load-input-stream (make type '() (list input-stream object)))
      (cold-load-output-stream (make type '() (list output-stream object))))

  (add-method (really-read-char (cold-load-input-stream) self)
    (%read-char))

  (add-method (write-char (cold-load-output-stream) self char)
    (%write-char char))

  (set! standard-input (make cold-load-input-stream))
  (set! standard-output (make cold-load-output-stream)))

;;; eof
